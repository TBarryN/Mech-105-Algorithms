Another Root Finding method that integrates experimental data

function [I] = Simpson(x, y)
% Numerical evaluation of integral by Simpson's 1/3 Rule
% Inputs
%   x = the vector of equally spaced independent variable
%   y = the vector of function values with respect to x
% Outputs:
%   I = the numerical integral calculated
sx = size(x)
sy = size(y)
xmax = x(1,end)
minix = x(1,1)
maxy = y(1,end)
miniy = y(1,1)
n = x(:)
I = 0
i = 1
while (1)
    i = i+1
    h = (xmax-minix)./(sy(2)-1);
    if length(x)~=length(y)
        error ('unequal spacing')
    end
    if range(x(2:end)-x(1:end-1))~=0
        error ('x values not valid')
    end
    if sy(2)==2
        warning('trap rule?')
        I = h.*((miniy+maxy)./2)
        break
    elseif sy(2)==3
        y(2) = 4.*y(2)
        sumy = sum(y(:))
        I = (h./3).*(sumy)
        break
    else sy(2)>3
        if i==(sx(2)-1)
            if mod(sx(2),2)==0
                warning ('trap on odd')
                sumy = sum(y(:))-maxy
                I = (h/3)*(sumy)+(h./2)*(y(sx(2)))+(y(sx(2)-1));
                break
            else mod(sx(2),2)==1
            sumy=sum(y(:))
            I = h./3.*(sumy)
            break
        end
        elseif mod(i,2)==1 
        y(i)=2*y(i);
        else mod(i,2)==0
        y(i)=4*y(i);
        end
    end
end
